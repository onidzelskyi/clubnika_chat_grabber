X-Account-Key: account5
X-UIDL: GmailId12896e0953deb5ac
X-Mozilla-Status: 0000
X-Mozilla-Status2: 00000000
X-Mozilla-Keys:                                                                                 
Delivered-To: mlsubscriber.tech@csmining.org
Received: by 10.143.160.8 with SMTP id m8cs26396wfo;
        Fri, 14 May 2010 05:53:41 -0700 (PDT)
Received: by 10.231.183.140 with SMTP id cg12mr844078ibb.35.1273841620404;
        Fri, 14 May 2010 05:53:40 -0700 (PDT)
Return-Path: <filesystem-dev-bounces+mlsubscriber.tech=csmining.org@lists.apple.com>
Received: from bz2.apple.com (bz2.apple.com [17.254.13.37])
        by mx.google.com with ESMTP id p18si397079ibq.28.2010.05.14.05.53.40;
        Fri, 14 May 2010 05:53:40 -0700 (PDT)
Received-SPF: pass (google.com: manual fallback record for domain of filesystem-dev-bounces+mlsubscriber.tech=csmining.org@lists.apple.com designates 17.254.13.37 as permitted sender) client-ip=17.254.13.37;
Authentication-Results: mx.google.com; spf=pass (google.com: manual fallback record for domain of filesystem-dev-bounces+mlsubscriber.tech=csmining.org@lists.apple.com designates 17.254.13.37 as permitted sender) smtp.mail=filesystem-dev-bounces+mlsubscriber.tech=csmining.org@lists.apple.com
Received: from lists.apple.com (unknown [17.128.113.151])
	by bz2.apple.com (Postfix) with ESMTP id A679C1C429C70
	for <mlsubscriber.tech@csmining.org>; Fri, 14 May 2010 05:53:39 -0700 (PDT)
Received: from master.lists.apple.com (localhost [127.0.0.1])
	by lists.apple.com (Postfix) with ESMTP id 8B79127A3F821
	for <mlsubscriber.tech@csmining.org>; Fri, 14 May 2010 05:53:39 -0700 (PDT)
X-Original-To: filesystem-dev@lists.apple.com
Delivered-To: filesystem-dev@lists.apple.com
Received: from relay3.apple.com (relay3.apple.com [17.128.113.33])
	by lists.apple.com (Postfix) with ESMTP id 544E327A3F7F8
	for <filesystem-dev@lists.apple.com>;
	Fri, 14 May 2010 05:53:36 -0700 (PDT)
Received: from mail-in12.apple.com (mail-in12.apple.com [17.254.13.10])
	by relay3.apple.com (Postfix) with ESMTP id 43C30D3125A0
	for <filesystem-dev@lists.apple.com>;
	Fri, 14 May 2010 05:53:36 -0700 (PDT)
X-AuditID: 11fe0d0a-b7ca0ae000001e78-f1-4bed47cff4d8
Received: from daleenterprise.com (daleenterprise.com [67.78.11.229])
	by mail-in12.apple.com (Apple Secure Mail Relay) with SMTP id
	7E.6D.07800.FC74DEB4; Fri, 14 May 2010 05:53:36 -0700 (PDT)
Received: from localhost (localhost [127.0.0.1])
	by daleenterprise.com (Postfix) with ESMTP id 1B66012B6DA6
	for <filesystem-dev@lists.apple.com>;
	Fri, 14 May 2010 08:53:35 -0400 (EDT)
Received: from daleenterprise.com ([127.0.0.1])
	by localhost (daleenterprise.com [127.0.0.1]) (amavisd-new, port 10024)
	with ESMTP id 25293-15 for <filesystem-dev@lists.apple.com>;
	Fri, 14 May 2010 08:53:33 -0400 (EDT)
Received: from [10.1.100.11] (unknown [67.78.11.226])
	by macftphttp.serverbox.org (Postfix) with ESMTP id 3F82812B6D9C
	for <filesystem-dev@lists.apple.com>;
	Fri, 14 May 2010 08:53:33 -0400 (EDT)
Mime-Version: 1.0 (Apple Message framework v752.2)
Content-Transfer-Encoding: 7bit
Message-Id: <4FFB1881-636E-4DDF-A821-21C3381CFBA3@macftphttp.serverbox.org>
Content-Type: text/plain; charset=US-ASCII; delsp=yes; format=flowed
To: filesystem-dev@lists.apple.com
From: websrvr <websrvr@macftphttp.serverbox.org>
Date: Fri, 14 May 2010 08:53:32 -0400
X-Mailer: Apple Mail (2.752.2)
MTA-Interface: amavisd-new-2.3.3 (2005-08-22) + Maia Mailguard 1.0.1 at
	daleenterprise.com
XScanned: using SpamAssassin 3.1.7 (2006-10-05) at daleenterprise.com
X-Virus-Scanned: using ClamAV 0.96 (2010-03-15) at daleenterprise.com
X-Brightmail-Tracker: AAAAAwBUIXcUKSB6FCkyUg==
Subject: DARegisterDiskMountApprovalCallback() behavior
X-BeenThere: filesystem-dev@lists.apple.com
X-Mailman-Version: 2.1.5
Precedence: list
List-Id: Developer discussions of file system technologies
	<filesystem-dev.lists.apple.com>
List-Unsubscribe: <http://lists.apple.com/mailman/listinfo/filesystem-dev>,
	<mailto:filesystem-dev-request@lists.apple.com?subject=unsubscribe>
List-Post: <mailto:filesystem-dev@lists.apple.com>
List-Help: <mailto:filesystem-dev-request@lists.apple.com?subject=help>
List-Subscribe: <http://lists.apple.com/mailman/listinfo/filesystem-dev>,
	<mailto:filesystem-dev-request@lists.apple.com?subject=subscribe>
Sender: filesystem-dev-bounces+mlsubscriber.tech=csmining.org@lists.apple.com
Errors-To: filesystem-dev-bounces+mlsubscriber.tech=csmining.org@lists.apple.com

Example code:

#import <Foundation/Foundation.h>
#import <DiskArbitration/DiskArbitration.h>

DADissenterRef
DiskApproved(DADiskRef disk, void *context)
{
	char const *CdiskName = DADiskGetBSDName(disk);
	DADissenterRef dissenter;
	char *type;
	NSString *diskName = [NSString stringWithUTF8String:CdiskName];
	NSRange s1s1NumberRange = NSMakeRange([diskName length] - 4, 4);

	if([[diskName substringWithRange:s1s1NumberRange]  
isEqualToString:@"s3s1"]) /* check for our magic partition */
	{
		CFStringRef arguments[] =
		{
			CFStringCreateWithCString(kCFAllocatorDefault, "nobrowse",  
kCFStringEncodingUTF8),
			CFStringCreateWithCString(kCFAllocatorDefault, "owners",  
kCFStringEncodingUTF8),
			CFStringCreateWithCString(kCFAllocatorDefault, "suid",  
kCFStringEncodingUTF8),
			NULL
		};

		DADiskMountWithArguments(disk,
								NULL,
								kDADiskMountOptionDefault,
								NULL,
								NULL,
								arguments);

		/* deny the mount since we already mounted it */
		dissenter = DADissenterCreate(kCFAllocatorDefault,
									kDAReturnNotPermitted,
									CFSTR("mounted hidden"));

		type = "we will mounted";
	}
	else
	{
		/* allow normal mounting */
		dissenter = NULL;

		type = "system will mount";
	}

	printf("%s: %s\n", CdiskName, type);

	return dissenter;
}

int
main (int argc, const char * argv[])
{
     NSAutoreleasePool *pool = [NSAutoreleasePool new];
	DAApprovalSessionRef session = DAApprovalSessionCreate 
(kCFAllocatorDefault);

	if (!session)
	{
		fprintf(stderr, "failed to create Disk Arbitration session");
		goto out;
	}

	DARegisterDiskMountApprovalCallback(session,
										NULL,  // matches all disk objects
										DiskApproved,
										NULL); // context

	DAApprovalSessionScheduleWithRunLoop(session,
										 CFRunLoopGetCurrent(),
										 kCFRunLoopDefaultMode);

	CFRunLoopRunInMode(kCFRunLoopDefaultMode,
						60 /* seconds */,
						false);

	DAApprovalSessionUnscheduleFromRunLoop(session,
										 CFRunLoopGetCurrent(),
										 kCFRunLoopDefaultMode);

	DAUnregisterApprovalCallback(session,
								DiskApproved,
								NULL);

out:
    if (session)
		CFRelease(session);

     [pool release];

	return 0;
}


________________________________________________________________________ 
_______________________


The example appears to work but I'm noticing the call to  
DADiskMountWithArguments() from the callback function seems to  
trigger the approval process for the same partition.

I've look at suggested solution to my mount issue and a manual  
solution is not acceptable or the use of the fstab file because it  
cannot be guaranteed that it exists or that the content will be correct.

It has been suggested that example code does exist however no one has  
point me to or provided me with any sample code that shows usage of  
these functions.

Also, it seems that calling DADiskMount() or DADiskMountWithArguments 
() from within my callback function seem to trigger the approval  
process again
 _______________________________________________
Do not post admin requests to the list. They will be ignored.
Filesystem-dev mailing list      (Filesystem-dev@lists.apple.com)
Help/Unsubscribe/Update your Subscription:
http://lists.apple.com/mailman/options/filesystem-dev/mlsubscriber.tech%40csmining.org

This email sent to mlsubscriber.tech@csmining.org

